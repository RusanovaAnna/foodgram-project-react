version: '3.3'

services:

  db:
    image: postgres:13.0-alpine
    volumes:
      - /var/lib/postgresql/data/
    env_file:
      - ./.env
  
  backend:
    image: annarulunat/foodgram:latest
    restart: always
    volumes:
      - static_value:/app/static/
      - media_value:/app/media/
    depends_on:
      - db
    env_file:
      - ./.env

  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    volumes:
      - ../frontend/:/app/result_build/
    depends_on:
      - backend
  
  nginx:
    image: nginx:1.21.3-alpine
    ports:
      - "80:80"

    restart: always
    
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ../frontend/build:/usr/share/nginx/html/
      - ../docs/:/usr/share/nginx/html/api/docs/
      - ./certbot/www:/var/www/certbot
      - ./certbot/conf/:/etc/letsencrypt
      - static_value:/var/html/static/
      - media_value:/var/html/media/
    #entrypoint: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    depends_on:
      - frontend
      - backend


volumes:
  db:
  static_value:
  media_value:

#version: '3.8'
#services:
#  db:
#    env_file:
#      - .env
#    image: postgres:13.0-alpine
#    volumes:
#      - postgres_data:/var/lib/postgresql/data/
#    restart: always

#  backend:
#    image: xptoff/foodgram-backend:latest
#    restart: always
#    depends_on:
#      - db
#    volumes:
#      - static_value:/app/staticfiles/
#      - media_value:/app/media/
#    env_file:
#      - ./.env

#  frontend:
#    image: xptoff/foodgram-frontend:latest
#    volumes:
#      - result_build:/app/result_build/build/
#    depends_on:
#      - backend

#  nginx:
#    image: nginx:1.21.3-alpine
#    ports:
#      - '80:80'
#    volumes:
#      - ./nginx.conf:/etc/nginx/conf.d/default.conf
#      - result_build:/usr/share/nginx/html/
#      - ../docs/:/usr/share/nginx/html/api/docs/
#      - static_value:/var/html/staticfiles/
#      - media_value:/var/html/media/
#    depends_on:
#      - backend
#
#volumes:
#  result_build:
#  postgres_data:
#  static_value:
#  media_value:


#version: '3.3'
#services:
#  db:
#    image: postgres:13.0-alpine
#    volumes:
#      - postgres_data:/var/lib/postgresql/data/
#    env_file:
#      - ./.env
#  backend:
#    image: listener123/foodgram:latest
#    restart: always
#    volumes:
#      - static_value:/backend/static/
#      - media_value:/backend/media/
#    depends_on:
#      - db
#    env_file:
#      - ./.env
#  frontend:
#    image: listener123/foodgram-frontend:latest
#    volumes:
#      - ../frontend/:/app/result_build/
#  nginx:
#    image: nginx:1.19.3
#    ports:
#      - "80:80"
#    volumes:
#      - static_value:/var/html/static/
#      - media_value:/var/html/media/
#      - ./nginx.conf:/etc/nginx/conf.d/default.conf
#      - ../frontend/build:/usr/share/nginx/html/
#      - ../docs:/usr/share/nginx/html/api/docs
#      - ../docs/redoc.html:/usr/share/nginx/html/api/docs/redoc.html
#      - ../docs/openapi-schema.yml:/usr/share/nginx/html/api/docs/openapi-schema.yml
#    restart: always
#    depends_on:
#      - backend
#      - frontend
#volumes:
#  postgres_data:
#  static_value:
#  media_value:

