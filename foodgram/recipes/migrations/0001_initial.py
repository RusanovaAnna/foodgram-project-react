# Generated by Django 4.0.6 on 2022-08-08 16:44

import django.core.validators
from django.db import migrations, models
import recipes.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='FavouriteRecipe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_favorited', models.BooleanField(default=False, verbose_name='is favorited')),
                ('is_in_shopping_cart', models.BooleanField(default=False, verbose_name='is in shopping cart')),
            ],
            options={
                'verbose_name': 'Favorites',
                'verbose_name_plural': 'Favorites',
            },
        ),
        migrations.CreateModel(
            name='Follow',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Ingredient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='name')),
                ('measurement_unit', models.CharField(max_length=200, verbose_name=recipes.models.UnitOfMeasurement)),
            ],
            options={
                'verbose_name': 'ingredient',
                'verbose_name_plural': 'ingredients',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='IngredientList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1)], verbose_name='amount')),
            ],
            options={
                'verbose_name': 'Ingredient amount',
                'verbose_name_plural': 'Ingredient amounts',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Recipe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(help_text='Select image to upload)', upload_to='recipes/', verbose_name='image')),
                ('name', models.CharField(max_length=200, unique=True, verbose_name='name')),
                ('text', models.TextField(verbose_name='recipe description')),
                ('cooking_time', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1)], verbose_name='cooking time')),
            ],
            options={
                'verbose_name': 'Recipe',
                'verbose_name_plural': 'Recipes',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True, verbose_name='name')),
                ('color', models.CharField(default='#E26C2D', max_length=32, unique=True, verbose_name='color')),
                ('slug', models.SlugField(editable=False, max_length=255, unique=True, verbose_name='slug')),
            ],
            options={
                'verbose_name': 'Tag',
                'verbose_name_plural': 'Tags',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='UnitOfMeasurement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='name')),
                ('metric', models.CharField(choices=[('mass', 'mass'), ('volume', 'volume'), ('quantity', 'quantity'), ('percent', 'percent'), ('miscellaneous', 'miscellaneous')], max_length=255, unique=True, verbose_name='metric')),
            ],
            options={
                'verbose_name': 'unit of measurement',
                'verbose_name_plural': 'unit of measurement',
                'ordering': ['metric', 'name'],
            },
        ),
    ]
